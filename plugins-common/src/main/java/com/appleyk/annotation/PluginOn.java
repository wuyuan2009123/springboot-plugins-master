package com.appleyk.annotation;

import java.lang.annotation.*;

/**
 * <p>自定义插件注解</p>
 *
 * @author appleyk
 * @version V.0.1.1
 * @blob https://blog.csdn.net/appleyk
 * @github https://github.com/kobeyk
 * @date created on  下午10:06 2022/12/6
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
@Documented
public @interface PluginOn {
    /**
     * 后面会开新分支，具体走一个插件应用的场景再补一补注解中的属性信息：
     * 从需求开始、到简单交互设计、到ea系统建模设计、再到前后端项目搭建外加插件开发一条龙。
     * 实现的效果就是：
     * 乙方用户在前端交互操作时发现只有功能A,于是想增加功能B，向甲方提了需求。
     * 需求在合理保障范围内，于是需求从项目经理这流到了研发那，研发一看，这不简单吗，
     * 于是很快开发了带有功能B的jar包，钉钉上随手发给了对面的测试。
     * 测试一看懵逼了：你小子给我这几个意思？
     * 研发说：我这还有其他问题要解决，你帮我扔到XXXXXX路径下就行，剩下的你直接测试功能就行。
     * 测试又是一脸懵：我去，这么简单吗，早知道我也干开发跟你混了？我记得新增功能要重启服务的啊？
     * 过了一会测试在小组群发了一条消息：老大，乙方老哥提的需求我们这边已经研发完毕，我测试过了没有问题。
     * 项目经理：ok，那个小王，你联系下乙方，给他们系统升下级。
     * 小王：好勒。
     * 于是，测试把研发给他的jar包转发给了售前小王，剩下的就是小王联系上了乙方，远程了对方的电脑，
     * 然后将jar包放到了指定位置，再然后就是用户很快地在前端页面上看到了新功能B，满意的笑了起来。
     *
     * 整个过程比想象的要顺利的多，原因吗，后面开分支聊。
     *
     */
}
